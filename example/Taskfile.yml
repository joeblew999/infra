# https://taskfile.dev

# https://taskfile.dev/reference/cli

# Just an example using the remote taskfiles feature.

version: '3'

dotenv:
  - '.env'                # Looks for .env in the Taskfile's directory
  - 'config/.env.local'   # Looks for config/.env.local relative to Taskfile
  - '{{.HOME}}/.env_global' # Looks for .env_global in your home directory


vars:
  GIT_ROOT:
    # Use the 'sh' attribute to execute a shell command and capture its output
    sh: git rev-parse --show-toplevel

includes:
  #task:
  #  taskfile: '{{.GIT_ROOT}}./taskfiles/task_taskfile.yml'
  #git:
  #  taskfile: '{{.GIT_ROOT}}./taskfiles/git_taskfile.yml'
  
  
tasks:
  default:
    desc: List operations and state.
    cmds:
      - echo
      - echo
      - task --list-all
      - echo
    silent: true

  
  vars:
    desc:  Print all Task built-in variables
    cmds:
      - echo ""
      - echo "Task Information"
      - echo "TASK                {{.TASK}}"
      - echo "GIT_ROOT            {{.GIT_ROOT}}"
      - echo "TASK_DIR            {{.TASK_DIR}}"
      - echo "TASK_FILE           {{.TASK_FILE}}"
      - echo "ROOT_TASKFILE       {{.ROOT_TASKFILE}}"
      - echo "ROOT_DIR            {{.ROOT_DIR}}"
      - echo "USER_WORKING_DIR    {{.USER_WORKING_DIR}}"
      - echo ""
      - echo "Environment and System Information"
      - echo "OS                  {{.OS}}"
      - echo "ARCH                {{.ARCH}}"
      - echo "CLI_ARGS            {{.CLI_ARGS}}"
      - echo "CLI_ARGS_ARRAY      {{.CLI_ARGS_ARRAY}}"
      - echo "CLI_ARGS_LIST       {{.CLI_ARGS_LIST}}"
      - echo ""
      - echo "GO Information"
      - echo "GO_ARCH             {{.GO_ARCH}}"
      - echo "GO_OS               {{.GO_OS}}"
      - echo ""
    silent: true

  version:
    desc: Show Task version
    cmds:
      - task --version  

  

  


  

      
