name: Deploy to Fly.io

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  FLY_APP_NAME: ${{ secrets.FLY_APP_NAME || 'infra-mgmt' }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run tests
      run: go test -v ./...

    - name: Build binary
      run: go build -v .

    - name: Test ko build (without push)
      run: |
        export KO_DOCKER_REPO=test
        go run . ko build --push=false --oci-layout-path=./build github.com/joeblew999/infra

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Setup Fly.io CLI
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Install ko
      run: |
        go run . ko version || echo "Ko will be installed on first use"

    - name: Build and deploy with ko
      run: |
        export KO_DOCKER_REPO=registry.fly.io/${{ env.FLY_APP_NAME }}
        export ENVIRONMENT=production
        
        # Build container image
        echo "Building container image..."
        IMAGE=$(go run . ko build --platform=linux/amd64 github.com/joeblew999/infra)
        echo "Built image: $IMAGE"
        
        # Deploy to Fly.io
        echo "Deploying to Fly.io..."
        flyctl deploy --image "$IMAGE" --app ${{ env.FLY_APP_NAME }}

    - name: Verify deployment
      run: |
        flyctl status --app ${{ env.FLY_APP_NAME }}
        echo "Deployment complete! App available at: https://${{ env.FLY_APP_NAME }}.fly.dev"